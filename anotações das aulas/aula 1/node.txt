    O Node é uma maneira de trabalharmos com o JavaScript sem precisar utilizar uma página
HTML como base para a aexecução do arquivo ".js", trazendo um foco maior no desenvolvimento Back-End,
permitindo integração com Bancos de Dados e APIs, tornando o código atrelado ao HTML dinâmico.

    A instalação do Node pode ser acessada ao baixar seu instalador no site "nodejs.org/pt", e em seu instalador,
devemos aceitar os termos de uso, escolher o local de sua instalação, escolher como as funcionalidades do Node serão
instaladas, escolher se deseja instalar módulos nativos adicionais, que são opcionais e necessitam de outros programas para a instalação (durante as aulas, é recomendado que não instale-os, já que não o utilizaremos), e então, iniciar a instalação. 
    Após a instalação, para garantir que teremos tudo funcionando, devemos verificar no terminal do Windows se o Node foi 
instalado em sua versão mais recente, para isso, devemos abrir um dos terminais do Windows, seja o PowerShell ou o Prompt de Comando, e executar a seguinte linha de comando: "node --version" ou "node -v" para verificar a versão, caso ele não retorne um erro, a instalação foi mal sucedida (em alguns sistemas operacionais, pode ser necessário que a máquina seja reiniciada ou apenas o terminal, mas para garantir o funcionamento, reinicie a máquina logo após a instalação), em outro caso, pode ocorrer do Node não estar em uma versão atualizada o suficiente para o projeto, pois é recomendado que ele esteja em uma versão superior à 20, nesses casos, uma reinstalação pode ser necessária.
    Para que possamos continuar com o projeto, devemos realizar os mesmos passos descritos no parágrafo anterior dentro 
do terminal integrado no Visual Studio Code, porém, com a pasta que abrigará o projeto aberta no programa. Logo após verificar a instalação do Node.js, no terminal de Prompt de Comando integrado ao VSCode, devemos realizar a seguinte linha de comando "npm init es6 -y", dessa forma, pedindo ao gerenciador de pacotes do Node, chamado NPM, para que ele inicialize com o comando "init" o "es6" que basicamente adapta ele ao JavaScript atualizado, o mais atual, e o "-y" apenas confirma a inicialização. Ao executar esse comando, ele cria uma estrutura do Node chamada "package.json" que descreve o projeto e suas dependencias, ou seja, as tecnologias agregadas ao projeto que não criamos.