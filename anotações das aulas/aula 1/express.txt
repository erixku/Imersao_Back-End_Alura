A programação em Node.js é estruturada em diversos módulos que complementam a programação, e o mais famoso e conhecido entre eles se chama "Express", responsável por dizer ao JavaScript que tal arquivo será identificado como um criador de servidor. Para instalar o módulo, é necessário escrever o comando "npm install express", com isso, uma nova pasta de módulos do Node.js surgirá nos arquivos, porém, não é necessário explora-lá, ao menos por enquanto.

Após instalar o módulo Express e todos os módulos agregados, devemos criar um arquivo a parte que abrigará o servidor da nossa aplicação, por convenção, nomeamos ele de "server.js" e nele importaremos o módulo Express com o comando "import express from "express";". Para que nosso servidor possa funcionar, devemos abrigar tudo o que importamos do Express em uma variável, para que utilizemos suas funções, e logo após, começaremos a utilizar uma delas, a "listen" (o servidor ficará ouvindo uma porta específica), passando para a função o parâmetro da porta que o servidor utilizará e então uma "arrow function" com o retorno do servidor ao ouvir a porta.

Logo após, criaremos uma Rota, um caminho para chegar até o servidor local. Utilizamos a função "get" para tal, com o primeiro parâmetro sendo o nome da rota, com o começo com uma barra("/"), o segundo parâmetro é um "arrow function" com parâmetros "req, res", sendo respectivamente, requisição e resposta, e dentro da arrow function, utilizaremos duas funções da resposta, ".status()" e ".send()". Antes de explicar o que são essas funções, requisição é a situação em que pedimos algo ao servidor, e resposta é o que ele nos retornará, então, ao utilizarmos a "res.status(200).send("olá mundo");", estamos fazendo com que o servidor nos retorne a frase "olá mundo" no status 200, o status é a condição em que a resposta da requisição está, no caso, 200 significa que está tudo certo com a resposta do servidor.